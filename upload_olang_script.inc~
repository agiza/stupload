<?php
	function upload_olang_script() {

		if($_REQUEST['trid']){
			$trid = $_REQUEST['trid'];
			$query = "select tr.language, td.foss_category, td.tutorial_name, td.tutorial_level from tutorial_resources tr INNER JOIN tutorial_details td ON td.id=tr.tutorial_detail_id where tr.id='".$trid."'";

			$result = db_query($query);

			$tutorial_detail = db_fetch_object($result);

			require_once('path.config.inc');
			$wiki_url = $tutorial_detail->foss_category.'/'.$tutorial_detail->tutorial_level.'/'.$tutorial_detail->tutorial_name.'/'.$tutorial_detail->language;
			$output = "<h2>Upload Script for ".$_REQUEST['tn']."</h2>";
			$output .= "<div class='wiki-script-file'></div>";
			$output .= drupal_get_form('upload_olang_script_form', $trid, $wiki_url);

			return $output;
		}else{
			$output = "<p>Something went wrong. Please, try again.</p>";
			return $output;
		}

		

	}


	function upload_olang_script_form($form_state, $trid, $wiki_url) {
		$path = drupal_get_path('module', 'stupload');
		drupal_add_js($path . '/stupload.js');
		drupal_add_css($path . '/stupload.css');
		
		$form['#prefix'] = '<div class="stupload-form">';
		$form['#suffix'] = '</div>';
		$form['#attributes'] = array('enctype' => "multipart/form-data", 'class' => 'addfoss');

		$form['wiki_url'] = array(
			'#type' => 'hidden',
			'#value' => $wiki_url,
			'#attributes' => array('class' => 'upeng_script_wiki'),
		);

		$form['trid'] = array(
			'#type' => 'hidden',
			'#value' => $trid,
		);
		
		$form['script_status'] = array(
			'#type' => 'select',
			'#title' => t('Script'),
			'#required' => TRUE,
			'#options' => array(0 => 'Required' , 1 => 'Will upload later'),
			'#attributes' => array('class' => 'upeng_script_status'),
		);
		$form['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Submit')
	   );
	
	return $form;
	
	}
	
	
	function upload_olang_script_form_validate($form, &$form_state){
	
	  	return;
	}
	
	function upload_olang_script_form_submit($form, &$form_state){
		
		global $user;
		$tutorial_outline = $form_state['values']['wiki_url'];
		if($form_state['values']['script_status'] == 1){
			$tutorial_outline = 'pending';
		}


		$query = "UPDATE tutorial_resources SET tutorial_status='pending', tutorial_script='".$form_state['values']['wiki_url']."' where id='".$form_state['values']['trid']."'";


		db_query($query);
		

		$query = "INSERT INTO `tutorial_update_log` (`id`, `tutorial_resources_id`, `update_time`, `updated_by`, `updated_content`) VALUES (NULL, '".$form_state['values']['trid']."', CURRENT_TIMESTAMP, '".$user->name."', 'script')";


		if(db_query($query)){
			//Mail to contributor
			$query = "select tr.language, td.foss_category, td.tutorial_name, td.tutorial_level from tutorial_resources tr INNER JOIN tutorial_details td ON td.id=tr.tutorial_detail_id where tr.id='".$form_state['values']['trid']."'";
			$result = db_query($query);
			$tutorial_detail = db_fetch_object($result);

			$a = new stdClass();
			$a->tc = 'Script';
								
			$tds =  (object) array_merge((array) $a, (array) $tutorial_detail);
		    $mailto = $user->mail;
		    $role = 'contributor';
		    $message = "";
			stupload_notify($mailto, $role, $message, $tds, $user->name);

			//Mail to admin_review_user 
			$role = 'quality_checker';
			$quality_mailid = get_language_role_emails($tutorial_detail->language);

			$role = 'admin_review_user';
			$admin_mailid = get_role_emails($role);

			$mailto = $admin_mailid.$quality_mailid;
		    $message = "";
			stupload_notify($mailto, $role, $message, $tds, $user->name);

			$redirect = 'stupload/olang_index/?tr='.$form_state['values']['trid'];

			drupal_goto($path = $redirect, $query=NULL, $fragment = NULL, $http_response_code = 302);

			drupal_set_message('Tutorial script Updated Successfully');
		}else {
			drupal_set_message('Error while Adding Tutorial Script, Please try again.');
		}

}

?>
