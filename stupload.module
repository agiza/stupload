	<?php

function stupload_perm() {
	return array(
		'stupload update codefile',
		'stupload update slide',
		'stupload update video',
		'stupload update script',
		'stupload update outline',
		'stupload update studyplan',
		'stupload update index',
		'stupload other language video',
		'stupload other language script',
		'stupload other language outline',
		'stupload other language prerequisites',
		'stupload other language index',
		'stupload review tutorial',
		'stupload english-upload assignment',
		'stupload english-upload codefile',
		'stupload english-upload video',
		'stupload english-upload slide',
		'stupload english-upload script',
		'stupload english-upload outline',
		'stupload english-upload prerequisites',
		'stupload english-upload index',
		'stupload add-tutorial',
		'stupload add-foss',
		'stupload list index',
		'resource not available',
		'resource not required',
		'stupload ajax-fill methods'
	);
}

function stupload_menu(){
	$items = array();
	
	$items['stupload/list'] = array(
		'title' => 'Module Index',
		'page callback' => 'index',
		'access arguments' => array('stupload list index'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['stupload/addfoss'] = array(
		'title' => 'Add New Foss Category',
		'description' => 'Add New Foss Category for ST Videos',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('add_foss_form'),
		'access arguments' => array('stupload add-foss'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'add_foss.inc',
	);
	$items['stupload/tutorial'] = array(
		'title' => 'Add New Tutorial Name',
		'description' => 'Add New Tutorial for Foss Category',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('add_tutorial_name_form'),
		'access arguments' => array('stupload add-tutorial'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'add_tutorial_name.inc',
	);
	$items['stupload/get_tutorial_levels'] = array(
		'page callback' => 'get_tutorial_levels',
		'access arguments' => array('stupload ajax-fill methods'),
		'type' => MENU_NORMAL_ITEM,
	);
	// upload english
	$items['stupload/english_index'] = array(
		'title' => 'Upload Tutorials',
		'page callback' => 'english_index',
		'access arguments' => array('stupload english-upload index'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'add_english_index.inc',
	);
	$items['stupload/upload_english'] = array(
		'title' => 'Upload English',
		'description' => 'Upload English',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('upload_english_prerequest_form'),
		'access arguments' => array('stupload english-upload prerequisites'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_english_prerequest.inc',
	);
	$items['stupload/get_category_levels'] = array(
		'page callback' => 'get_category_levels',
		'access arguments' => array('stupload ajax-fill methods'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['stupload/get_category_names'] = array(
		'page callback' => 'get_category_names',
		'access arguments' => array('stupload ajax-fill methods'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['stupload/get_timed_category_names'] = array(
		'page callback' => 'get_timed_category_names',
		'access arguments' => array('stupload ajax-fill methods'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['stupload/upload_english/outline'] = array(
		'description' => 'Upload English Outline',
		'page callback' => 'upload_english_outline',
		'access arguments' => array('stupload english-upload outline'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_english_outline.inc',
	);
	$items['stupload/upload_english/script'] = array(
		'description' => 'Upload English Script',
		'page callback' => 'upload_english_script',
		'access arguments' => array('stupload english-upload script'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_english_script.inc',
	);
	$items['stupload/upload_english/slide'] = array(
		'description' => 'Upload English Slide',
		'page callback' => 'upload_english_slide',
		'access arguments' => array('stupload english-upload slide'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_english_slide.inc',
	);
	$items['stupload/upload_english/video'] = array(
		'description' => 'Upload English Video',
		'page callback' => 'upload_english_video',
		'access arguments' => array('stupload english-upload video'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_english_video.inc',
	);
	$items['stupload/upload_english/codefile'] = array(
		'description' => 'Upload English Code ',
		'page callback' => 'upload_english_codefile',
		'access arguments' => array('stupload english-upload codefile'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_english_codefile.inc',
	);
	$items['stupload/upload_english/assignment'] = array(
		'description' => 'Upload English Assignment ',
		'page callback' => 'upload_english_assignment',
		'access arguments' => array('stupload english-upload assignment'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_english_assignment.inc',
	);
	$items['stupload/upload/review'] = array(
		'title' => 'Review Tutorial',
		'description' => 'Review Tutorial ',
		'page callback' => 'review_tutorial',
		'access arguments' => array('stupload review tutorial'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'review_tutorial.inc',
	);

	// other languages
	$items['stupload/olang_index'] = array(
		'title' => 'Update Tutorials',
		'page callback' => 'olang_index',
		'access arguments' => array('stupload other language index'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'add_olang_index.inc',
	);

	$items['stupload/upload_other_lang'] = array(
		'title' => 'Upload Other Languages',
		'description' => 'Upload Other Languages',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('upload_other_lang_prerequest_form'),
		'access arguments' => array('stupload other language prerequisites'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_other_lang_prerequest.inc',
	);

	$items['stupload/get_languages'] = array(
		'page callback' => 'get_languages',
		'access arguments' => array('stupload ajax-fill methods'),
		'type' => MENU_NORMAL_ITEM,
	);

	$items['stupload/get_olang_tnames'] = array(
		'page callback' => 'get_olang_tnames',
		'access arguments' => array('stupload ajax-fill methods'),
		'type' => MENU_NORMAL_ITEM,
	);

	$items['stupload/upload_other_lang/outline'] = array(
		'page callback' => 'upload_olang_outline',
		'access arguments' => array('stupload other language outline'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_olang_outline.inc',
	);
	$items['stupload/upload_other_lang/script'] = array(
		'page callback' => 'upload_olang_script',
		'access arguments' => array('stupload other language script'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_olang_script.inc',
	);
	$items['stupload/upload_other_lang/video'] = array(
		'page callback' => 'upload_olang_video',
		'access arguments' => array('stupload other language video'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'upload_olang_video.inc',
	);
	$items['stupload/update_index'] = array(
		'title' => 'Update Tutorials',
		'page callback' => 'update_index',
		'access arguments' => array('stupload update index'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'update_index.inc',
	);

	$items['stupload/update/studyplan'] = array(
		'description' => 'Update Studtplan ',
		'page callback' => 'update_studyplan',
		'access arguments' => array('stupload update studyplan'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'update_studyplan.inc',
	);
	$items['stupload/update/outline'] = array(
		'description' => 'Update Studtplan ',
		'page callback' => 'update_outline',
		'access arguments' => array('stupload update outline'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'update_outline.inc',
	);
	$items['stupload/update/script'] = array(
		'description' => 'Update Script',
		'page callback' => 'update_script',
		'access arguments' => array('stupload update script'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'update_script.inc',
	);
	$items['stupload/update/video'] = array(
		'description' => 'Update Video ',
		'page callback' => 'update_video',
		'access arguments' => array('stupload update video'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'update_video.inc',
	);
	$items['stupload/update/slide'] = array(
		'description' => 'Update Slide ',
		'page callback' => 'update_slide',
		'access arguments' => array('stupload update slide'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'update_slide.inc',
	);
	$items['stupload/update/codefile'] = array(
		'description' => 'Update Codefile ',
		'page callback' => 'update_codefile',
		'access arguments' => array('stupload update codefile'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'update_codefile.inc',
	);
	$items['stupload/update/assignment'] = array(
		'description' => 'Update Assignment',
		'page callback' => 'update_assignment',
		'access arguments' => array('stupload update assignment'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'update_assignment.inc',
	);

	// review tutorial 
	$items['stupload/review_tutorial_lists'] = array(
		'title' => 'Complete List Of Tutorials',
		'description' => 'List Of ST Videos',
		'page callback' => 'list_tutorials',
		'access arguments' => array('stupload review tutorials index'),
		'file' => 'list_tutorials.inc',
		'type' => MENU_NORMAL_ITEM,
	);

	//stupload-view by vishnu
	
	$items['stupload/view_logs_list'] = array(
		'title' => 'Complete List Of Upload Log',
		'description' => 'Complete List Of Upload Log',
		'page callback' => 'view_logs_list',
		'access arguments' => array('stupload logs index'),
		'file' => 'view_logs_list.inc',
		'type' => MENU_NORMAL_ITEM,
	);
	$items['stupload/view_tutorials_list'] = array(
		'title' => 'Complete List Of Tutorials',
		'description' => 'List Of ST Videos',
		'page callback' => 'list_tutorials',
		'access arguments' => array('stupload view tutorials index'),
		'file' => 'list_tutorials.inc',
		'type' => MENU_NORMAL_ITEM,
	);
	$items['stupload/update_tutorial_search'] = array(
		'title' => 'Update Pending Tutorial Submissions',
		'description' => 'List Of Pending Tutorial Submissions',
		'page callback' => 'update_tutorial_search',
		'access arguments' => array('stupload update tutorials index'),
		'file' => 'update_tutorial_search.inc',
		'type' => MENU_NORMAL_ITEM,
	);
	$items['stupload/get_tutorials_list'] = array(
		'title' => 'Complete List Of Tutorials',
		'description' => 'List Of ST Videos',
		'page callback' => 'get_tutorials_list',
		'access arguments' => array('stupload ajax-fill methods'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['stupload/get_update_tutorial_search'] = array(
		'title' => 'Update Pending Tutorial Submissions',
		'description' => 'List Of Pending Tutorial Submissions',
		'page callback' => 'get_update_tutorial_search',
		'access arguments' => array('stupload ajax-fill methods'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['resource_not_available'] = array(
		'title' => 'Resource Not Available',
		'description' => 'Resource Not Available',
		'page callback' => 'get_resource_not_available',
		'access arguments' => array('resource not available'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['resource_not_required'] = array(
		'title' => 'Resource Not Required',
		'description' => 'Resource Not Required',
		'page callback' => 'get_resource_not_required',
		'access arguments' => array('resource not required'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['stupload/play_video'] = array(
		'title' => 'Spoken Tutorial Learners Interface',
		'description' => 'Play selected video',
		'page callback' => 'play_video',
		'access arguments' => array('stupload play video'),
		'file' => 'play_video.inc',
		'type' => MENU_NORMAL_ITEM,
	);

	// Add English Timed Script
	$items['stupload/english_timed_script'] = array(
		'description' => 'Script',
		'page callback' => 'english_timed_script',
		'access arguments' => array('stupload upload english-timed script'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'english_timed_script.inc',
	);
	
  return $items;
}

// index page

function index(){

	$output .= "<div class='upload-index-page list-link'>";
	$output .= "<a class='addfoss' href='".$GLOBALS['base_url']."/stupload/addfoss'> Add New FOSS Category</a><br>";
	$output .= "<a class='tutorial' href='".$GLOBALS['base_url']."/stupload/tutorial'> Add New Tutorial</a><br>";
	$output .= "<a class='upload-english' href='".$GLOBALS['base_url']."/stupload/upload_english'> Upload English Tutorial</a><br>";
	$output .= "<a class='addfoss' href='".$GLOBALS['base_url']."/stupload/upload_other_lang'> Upload Other Languages Tutorials</a><br>";
	$output .= "<a class='update_tutorial' href='".$GLOBALS['base_url']."/stupload/update_tutorial_search'>Update Tutorials</a><br>";
	$output .= "<a class='addfoss' href='".$GLOBALS['base_url']."/stupload/review_tutorial_lists'>Review Tutorial</a><br>";
	$output .= "<a class='addfoss' href='".$GLOBALS['base_url']."/stupload/view_tutorials_list'>View All Tutorials</a><br>";
	$output .= "<a class='log' href='".$GLOBALS['base_url']."/stupload/view_logs_list'>View Upload Logs</a><br>";
	$output .= "</div>";
	return $output;
}
// for add availabel tutorial levels for add tutorial names
function get_tutorial_levels(){
	if(isset($_POST['foss']) && !empty($_POST['level'])){
		$query = "select order_code, tutorial_name from tutorial_details where foss_category='".$_POST['foss']."' and tutorial_level = '".$_POST['level']."'";
		$result = db_query($query);
		$exists_order = array();
		$existing_tutorial_name = array();
		while($row = db_fetch_object($result)){
			$exists_order[] = $row->order_code;
			$existing_tutorial_name[] = $row->tutorial_name;
		}
		
	}
	$i = 1;
	while($i < 100){
		$tutorial_order_no[] = $i;
		$i++;
	}
	$available = array_diff($tutorial_order_no, $exists_order);
	$send_data = array();
	foreach($available as $a){
		$send_data['tlevels'][] = $a;
	}
	foreach($existing_tutorial_name as $names){
		$send_data['tnames'][] = $names;
	}

	echo json_encode($send_data);
	exit;
}
// getting tutorial level
function get_category_levels(){
	if(isset($_POST['foss'])){
		$query = "select distinct tutorial_level from tutorial_details where foss_category='".$_POST['foss']."'";
		$result = db_query($query);
		$output = array();
		while($row = db_fetch_object($result)){
			$output[] = $row;
			//$output[] = '2';
		}
		echo json_encode($output);
		exit;
	}
}

// getting tutorial names
function get_category_names(){
	if(isset($_POST['level']) && isset($_POST['foss'])){
		//$query = "select distinct tutorial_name from tutorial_details where tutorial_level='".$_POST['level']."'";

		$query = "SELECT  tutorial_name FROM tutorial_details WHERE foss_category='".$_POST['foss']."' and tutorial_level =  '".$_POST['level']."' AND tutorial_details.id NOT IN ( SELECT distinct tutorial_detail_id FROM tutorial_resources where language='English')";
		$result = db_query($query);
		$output = array();
		while($row = db_fetch_object($result)){
			$output[] = $row;
		}
		echo json_encode($output);
		exit;
	}
}

function get_timed_category_names(){
	if(isset($_POST['level']) && isset($_POST['foss'])){
		//$query = "select distinct tutorial_name from tutorial_details where tutorial_level='".$_POST['level']."'";

		$query = "SELECT  tutorial_name FROM tutorial_details WHERE foss_category='".$_POST['foss']."' and tutorial_level =  '".$_POST['level']."' AND tutorial_details.id NOT IN ( SELECT distinct tutorial_detail_id FROM tutorial_resources where language='English-timed')";
		$result = db_query($query);
		$output = array();
		while($row = db_fetch_object($result)){
			$output[] = $row;
		}
		echo json_encode($output);
		exit;
	}
}

// ******** for other languages ************
// getting other languages
// function get_languages(){
// 	if(isset($_POST['level']) && isset($_POST['foss'])){

// 		$query = "SELECT  tl.name FROM tutorial_languages tl WHERE  tl.name NOT IN ( SELECT language FROM tutorial_resources where tutorial_detail_id in (select id from tutorial_details where foss_category='".$_POST['foss']."' and tutorial_level='".$_POST['level']."'))";
// 		$result = db_query($query);
// 		$output = array();
// 		while($row = db_fetch_object($result)){
// 			$output[] = $row;
// 		}
// 		echo json_encode($output);
// 		exit;
// 	}
// }

// getting tutorial names
function get_olang_tnames(){
	if(isset($_POST['level']) && isset($_POST['foss']) && isset($_POST['lang']) && isset($_POST['flag'])){
		if($_POST['flag'] == 0){
			$query = "SELECT  tutorial_name FROM tutorial_details WHERE foss_category='".$_POST['foss']."' and tutorial_level =  '".$_POST['level']."' AND tutorial_details.id IN ( SELECT tutorial_detail_id FROM tutorial_resources where language='English' AND tutorial_status='accepted' ) AND tutorial_details.id NOT IN ( SELECT tutorial_detail_id FROM tutorial_resources where language='".$_POST['lang']."')";
			// $query = "SELECT  tutorial_name FROM tutorial_details WHERE foss_category='".$_POST['foss']."' and tutorial_level =  '".$_POST['level']."' AND tutorial_details.id NOT IN ( SELECT tutorial_detail_id FROM tutorial_resources where language='".$_POST['lang']."')";
		}else{
			$query = "SELECT  tutorial_name FROM tutorial_details WHERE foss_category='".$_POST['foss']."' and tutorial_level =  '".$_POST['level']."'";
		}
		$result = db_query($query);
		$output = array();
		while($row = db_fetch_object($result)){
			$output[] = $row;
		}
		echo json_encode($output);
		exit;
	}
}


function read_ziparchive($file_path){

	//Create object
	$zip = new ZipArchive();
	//Open the archive2.zip
	if ($zip->open($file_path) !== TRUE) {
	    return '<span>Could not open archive</span>';
	}else{
		//Get the number of files in archive2.zip
		$numFiles = $zip->numFiles;

		//Iterate over the file list
		$file_data = "<ul class='archive-files'>";
		for ($i=0; $i<$numFiles; $i++) {
		    //Get the details of an entry defined by its index
		    $tmp = $zip->statIndex($i);
		    $file_data .= '<li>'.$tmp['name'].'</li>';
		}
		$file_data .= "</ul>";
		// close archive
		$zip->close();
		return $file_data;
		
	}

}

// function get_tutorials_list(){
// 	if(isset($_POST['foss']) && isset($_POST['lang'])){

// 		$query = "select tr.id as trid, tr.language, td.id as tdid, td.foss_category, td.tutorial_level, td.order_code, td.tutorial_name from tutorial_resources tr, tutorial_details td where tr.tutorial_detail_id=td.id and tr.language='".$_POST['lang']."' and td.foss_category='".$_POST['foss']."' order by td.order_code ASC";

// 		// for domain_user role
// 		global $user;
// 		if(in_array('domain_user', $user->roles)){
// 			$query = "select tr.id as trid, tr.language, td.id as tdid, td.foss_category, td.tutorial_level, td.order_code, td.tutorial_name from tutorial_resources tr, tutorial_details td where tr.tutorial_detail_id=td.id and tr.language='".$_POST['lang']."' and td.foss_category='".$_POST['foss']."' and tr.tutorial_status='under_review' order by td.order_code ASC";
// 		}
// 		if(in_array('admin_user', $user->roles)){
// 			$query = "select tr.id as trid, tr.language, td.id as tdid, td.foss_category, td.tutorial_level, td.order_code, td.tutorial_name from tutorial_resources tr, tutorial_details td where tr.tutorial_detail_id=td.id and tr.language='".$_POST['lang']."' and td.foss_category='".$_POST['foss']."' and tr.tutorial_status='pending' order by td.order_code ASC";
// 		}
		
// 		$result = db_query($query);
// 		$rows = array();
// 		$index = 0;
// 		while($r = db_fetch_object($result)) { 
// 			$rows[$index++] = $r;
// 		}
// 		echo json_encode($rows);

// 		exit;
// 	}else{
// 		echo json_encode('false');
// 	}
// }

// function get_update_tutorial_search(){
// 	if(isset($_POST['foss']) && isset($_POST['lang'])){
// 		$query = "select tr.id as trid, tr.language, tr.tutorial_outline, tr.tutorial_script, tr.tutorial_video, td.foss_category, td.tutorial_name, td.tutorial_level, td.order_code, tc.tutorial_slide, tc.tutorial_code, tc.tutorial_assignment from tutorial_resources tr, tutorial_details td, tutorial_common_contents tc where tr.tutorial_detail_id=td.id and tr.tutorial_content_id=tc.id and tr.language='".$_POST['lang']."' and td.foss_category='".$_POST['foss']."' order by td.order_code ASC";
// 		$result = db_query($query);
// 		$rows = array();
// 		$index = 0;
// 		while($r = db_fetch_object($result)) { 
// 			$rows[$index++] = $r;
// 		}
// 		echo json_encode($rows);
// 		exit;
// 	}else{
// 		echo json_encode('false');
// 	}
// }

function get_resource_not_required(){
	echo '<html>
			<head>
				<meta name="author" content="Spoken Tutorials (www.spoken-tutorials.org)">
				<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
				<link rel="stylesheet" href="drupst2nreq.php_files/style.css" type="text/css">
				<title>Complete List of Spoken Tutorials</title>
		
				<style type="text/css">
					td {font-family: tahoma, arial, verdana; font-size: 8pt }
					th {font-family:tahoma, arial, verdana; font-size:9pt}
				</style>
			</head>
			<body>
				<form method="POST" action="drupst2.php" id="stform" name="stform">
					<script type="text/javascript">
						//Disable right click script
						var message="Sorry, right-click has been disabled";
		
						function clickIE() {if (document.all) {(message);return false;}}
						function clickNS(e) {
						if(document.layers||(document.getElementById&&!document.all)){if (e.which==2||e.which==3) {(message);return false;}}}
						if (document.layers){document.captureEvents(Event.MOUSEDOWN);document.onmousedown=clickNS;}
						else{document.onmouseup=clickNS;document.oncontextmenu=clickIE;}
						document.oncontextmenu=new Function("return false");
		
						function setOptions(chosen) {
							var theContents = document.getElementById("foss1")[document.getElementById("foss1").selectedIndex].innerHTML;
							document.getElementById("fossdata").value = theContents;
							document.getElementById("fossid").value = theContents;
							document.rbid.insht.value = theContents;
						}
		
						function setOptions3(chosen) {
							var theContenta = document.getElementById("lang")[document.getElementById("lang").selectedIndex].innerHTML;
							document.getElementById("language").value = theContenta;
							document.getElementById("fossid").value = theContenta;
						}
		
						function GetSelectedItem() {
							len = document.stform.radioid.length;
							document.rbid.radiovalue.value=document.getElementById("fid").value;
		
							for (i = 0; i <len; i++) {
								if (document.stform.radioid[i].checked) {
									chosen = document.stform.radioid[i].value;
								}
							}
		
							if(chosen =="") {
								alert("Please select a Tutorial to watch");
							}
							else
							{
								document.rbid.radiovalue.value=chosen;
								document.rbid.insht.value=document.stform.fossdata.value;
							}
						}
		
						function showInstrsheet(){
		
							if(document.stform.fossdata.value =="")
						  {
								window.alert("Please select FOSS category to view instruction sheet");window.self;
							}
							else
							{
								inswindow=window.open(inks,"InstructionSheet","width=610 height=50 resizable=no scrollbars=no");
								inswindow.moveTo(350,300);
							}
						}
					</script>
		
					<center>
						<br>
						<p>
							<table bgcolor="#D2691E" width="600">
								<tbody>
									<tr>
										<td>
											<b>
												<font color="white" face="arial" size="2">
													<center>
														Resource Not Required<br><br>
														This resource is not required to complete this tutorial.<br>
														You can continue watching rest of the tutorials. 
														Please use the search feature to watch several other interesting tutorials. 
													</center>
												</font>
											</b>
										</td>
									</tr>
								</tbody>
							</table>
						</p>
						<br>
						<table height="5" bgcolor="lightgrey" width="600" border="0">
							<tbody>
								<tr>
									<td>
										<center>
											© 2011 | <a href="http://www.spoken-tutorial.org/" target="_blank">Spoken Tutorial.org</a><br>
											<b>IIT Bombay</b>
										</center>
									</td>
								</tr>
							</tbody>
						</table>
					</center>
				</form>
			</body>
		</html>';
	exit;
}

function get_resource_not_available(){
	
	echo '<html>
			<head>
				<meta name="author" content="Spoken Tutorials (www.spoken-tutorials.org)">
				<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
				<link rel="stylesheet" href="drupst2nreq.php_files/style.css" type="text/css">
				<title>Complete List of Spoken Tutorials</title>
		
				<style type="text/css">
					td {font-family: tahoma, arial, verdana; font-size: 8pt }
					th {font-family:tahoma, arial, verdana; font-size:9pt}
				</style>
			</head>
			<body>
				<form method="POST" action="drupst2.php" id="stform" name="stform">
					<script type="text/javascript">
						//Disable right click script
						var message="Sorry, right-click has been disabled";
		
						function clickIE() {if (document.all) {(message);return false;}}
						function clickNS(e) {
						if(document.layers||(document.getElementById&&!document.all)){if (e.which==2||e.which==3) {(message);return false;}}}
						if (document.layers){document.captureEvents(Event.MOUSEDOWN);document.onmousedown=clickNS;}
						else{document.onmouseup=clickNS;document.oncontextmenu=clickIE;}
						document.oncontextmenu=new Function("return false");
		
						function setOptions(chosen) {
							var theContents = document.getElementById("foss1")[document.getElementById("foss1").selectedIndex].innerHTML;
							document.getElementById("fossdata").value = theContents;
							document.getElementById("fossid").value = theContents;
							document.rbid.insht.value = theContents;
						}
		
						function setOptions3(chosen) {
							var theContenta = document.getElementById("lang")[document.getElementById("lang").selectedIndex].innerHTML;
							document.getElementById("language").value = theContenta;
							document.getElementById("fossid").value = theContenta;
						}
		
						function GetSelectedItem() {
							len = document.stform.radioid.length;
							document.rbid.radiovalue.value=document.getElementById("fid").value;
		
							for (i = 0; i <len; i++) {
								if (document.stform.radioid[i].checked) {
									chosen = document.stform.radioid[i].value;
								}
							}
		
							if(chosen =="") {
								alert("Please select a Tutorial to watch");
							}
							else
							{
								document.rbid.radiovalue.value=chosen;
								document.rbid.insht.value=document.stform.fossdata.value;
							}
						}
		
						function showInstrsheet(){
		
							if(document.stform.fossdata.value =="")
						  {
								window.alert("Please select FOSS category to view instruction sheet");window.self;
							}
							else
							{
								inswindow=window.open(inks,"InstructionSheet","width=610 height=50 resizable=no scrollbars=no");
								inswindow.moveTo(350,300);
							}
						}
					</script>
		
					<center>
						<br>
						<p>
							<table bgcolor="#D2691E" width="600">
								<tbody>
									<tr>
										<td>
											<b>
												<font color="white" face="arial" size="2">
													<center>
														Resource Not Available<br><br>
														This resource is not available right now.<br>
														You can continue watching rest of the tutorials.
														Please use the search feature to watch several other interesting tutorials. 
													</center>
												</font>
											</b>
										</td>
									</tr>
								</tbody>
							</table>
						</p>
						<br>
						<table height="5" bgcolor="lightgrey" width="600" border="0">
							<tbody>
								<tr>
									<td>
										<center>
											© 2011 | <a href="http://www.spoken-tutorial.org/" target="_blank">Spoken Tutorial.org</a><br>
											<b>IIT Bombay</b>
										</center>
									</td>
								</tr>
							</tbody>
						</table>
					</center>
				</form>
			</body>
		</html>';
	exit;
}

?>
